{"version":3,"sources":["components/Navbar.js","components/Home.js","components/EnListItem.js","components/EnList.js","App.js","serviceWorker.js","index.js"],"names":["withRouter","props","setTimeout","react_default","a","createElement","className","href","Home","Link","to","Component","EnListItem","state","open","active","text","handleClick","e","preventDefault","_this","setState","handleKeyUp","bool","toLowerCase","replace","target","value","this","drawerOpen","onClick","style","display","width","type","onChange","placeholder","EnList","lists","suffleLists","step","j","randomNum","Math","floor","random","length","indexOf","push","filter","post","index","_this2","arys","i","titlestep","Object","keys","match","params","map","key","axios","get","then","res","ary","data","split","concat","window","scrollTo","_this3","englishList","components_EnListItem","shuffle","bind","bottom","right","scrollTop","App","HashRouter","components_Navbar","Switch","Route","exact","path","component","Boolean","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c67677df.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link,NavLink,withRouter} from 'react-router-dom';\r\n\r\nconst Navbar = (props) =>{\r\n   \r\n    setTimeout(()=>{\r\n       // props.history.push('/about')\r\n    },2000)\r\n    return(\r\n        <nav className=\"nav-wrapper red darken-3\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"brand-logo\">나의 영춘기 과제</a>\r\n                <ul className=\"right\">\r\n                 \r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default withRouter(Navbar);","import React,{Component} from 'react';\r\n\r\nimport {Link} from 'react-router-dom';\r\nclass Home extends Component{\r\n\r\n  \r\n    render(){\r\n  \r\n        return (\r\n            <div className=\"container home\">\r\n                <h2 className=\"center\">Home</h2>    \r\n                <ul>\r\n            \r\n                    <li className=\"card\"><Link className=\"card-content card-title red-text\" to=\"/homwork/1\">homwork 1</Link></li>\r\n                    <li className=\"card\"><Link className=\"card-content card-title red-text\" to=\"/homwork/2\">homwork 2</Link></li>\r\n                    <li className=\"card\"><Link className=\"card-content card-title red-text\" to=\"/homwork/1/2\">homwork 1+2</Link></li>\r\n                    <li className=\"card\"><Link className=\"card-content card-title red-text\" to=\"/homwork/3\">homwork 3</Link></li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Home;\r\n\r\n","import React,{Component} from 'react';\r\nimport Swiper from 'swiper';\r\n\r\nclass EnListItem extends Component {\r\n\r\n    state = {\r\n        open:false,\r\n        active:false,\r\n        text:''\r\n    }\r\n    handleClick = (e) =>{\r\n        e.preventDefault();\r\n        this.setState({\r\n            open:!this.state.open\r\n        })\r\n      \r\n    }\r\n    handleKeyUp = (e) =>{\r\n        var bool = this.props.text[1].toLowerCase().replace(/ /gi, \"\") ===e.target.value.toLowerCase().replace(/ /gi, \"\");\r\n        this.setState({\r\n            open:bool,\r\n            active:bool,\r\n            text:e.target.value\r\n        })\r\n    }\r\n    componentWillReceiveProps(props) {\r\n        this.setState({ open: props.drawerOpen,active: props.drawerOpen,text:'' })\r\n        \r\n\r\n      }\r\n      componentDidMount(){\r\n        \r\n      }\r\n    render() {\r\n        var {text} = this.props;\r\n        return (\r\n            <div className=\"swiper-slide card\">                       \r\n                <div className=\"card-content\" >\r\n                    <a href=\"/\" onClick={this.handleClick} className=\"black-text\" style={{display:'block',width:'100%'}}>{text[0]}</a>\r\n                    <input type=\"text\" onChange={this.handleKeyUp} placeholder=\"Fill in the answer.\" className={this.state.active? 'blue-text': ''} value={this.state.text}/>\r\n                    <p className=\"blue-text\">{this.state.open?text[1]:null}</p>\r\n                \r\n                \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EnListItem;","import React,{Component} from 'react';\r\nimport axios from 'axios';\r\nimport EnListItem from './EnListItem';\r\n\r\n\r\nclass EnList extends Component{\r\n    \r\n     \r\n    state = {\r\n      \r\n        lists:[],\r\n        suffleLists:[],\r\n        drawerOpen: false,\r\n        step:''\r\n    }\r\n    shuffle(){\r\n       \r\n        var suffleLists=[];\r\n        for (var j=0; j<999; j++) {\r\n            var randomNum = Math.floor(Math.random() * this.state.lists.length);\r\n            if(suffleLists.indexOf(randomNum) === -1) {\r\n                suffleLists.push(randomNum);\r\n            \r\n                if (suffleLists.length === 30) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            suffleLists:this.state.lists.filter((post,index)=>{return (suffleLists.indexOf(index) !== -1)}),\r\n            drawerOpen: false\r\n        })\r\n   \r\n       \r\n    }\r\n    componentDidMount(){\r\n        let arys = [],i=0,titlestep='';\r\n\r\n\r\n        Object.keys(this.props.match.params).map((key) =>{\r\n            let step = this.props.match.params[key];\r\n            \r\n           \r\n            axios.get('./homework'+step+'.csv')\r\n            .then(res=>{\r\n                                 \r\n                let ary = res.data.split(/\\r?\\n|\\r/);\r\n                        \r\n                arys=arys.concat(ary)        \r\n                titlestep += (i!==0?'&':'')+step;\r\n                i++;\r\n             \r\n                this.setState({\r\n                    lists:arys,\r\n                    step:titlestep,\r\n                    suffleLists:arys\r\n                })\r\n                \r\n               \r\n            })\r\n            return step;\r\n\r\n        })\r\n\r\n        \r\n        \r\n       \r\n      \r\n       \r\n    }\r\n    scrollTop(e){\r\n        window.scrollTo(0, 0);\r\n\r\n    }\r\n  \r\n    render(){\r\n      \r\n        const {suffleLists} = this.state;\r\n        \r\n       \r\n        const englishList = suffleLists.length?(\r\n            suffleLists.map((post,index)=>{\r\n                let text = post.split('$');\r\n              \r\n                return (\r\n                    <EnListItem text={text} key={index} drawerOpen={this.state.drawerOpen}/>         \r\n                    \r\n                )\r\n            \r\n            })\r\n        ):(\r\n            <div className=\"center\">No lists yet</div>\r\n        );\r\n        return(\r\n            <div className=\"container homework\">\r\n                <h4 className=\"center\">과제{this.state.step}</h4>                  \r\n                <button  onClick={this.shuffle.bind(this)}>shuffle 30</button>         \r\n                <div className=\"swiper-container\">\r\n                    <div className=\"swiper-wrapper\">\r\n                    {englishList}\r\n                    </div>\r\n                </div>\r\n                <div className=\"fixed-action-btn direction-top\" style={{bottom: '25px', right: '24px'}} onClick={this.scrollTop}>\r\n                    <button className=\"btn-floating btn-large red\">\r\n                        <i className=\"material-icons\">top</i>\r\n                    </button>\r\n                \r\n                </div>\r\n                         \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default EnList;\r\n\r\n","import React, { Component } from 'react';\nimport Navbar from './components/Navbar';\nimport {HashRouter,Route,Switch} from 'react-router-dom';\nimport Home from './components/Home';\nimport EnList from './components/EnList';\n\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <div className=\"App\">\n      \n        <HashRouter>\n          <div className=\"App\">\n            <Navbar/>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/homwork/:id\" component={EnList} />            \n              <Route exact path=\"/homwork/:id/:id2\" component={EnList} />           \n              <Route exact path=\"/homwork/:id/:id2/:id3\" component={EnList} />          \n            </Switch>\n          </div>\n        </HashRouter>\n    \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}